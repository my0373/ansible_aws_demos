- hosts: localhost
  vars:
    vpc_name: "ansitest"
    vpc_cidr: "10.0.0.0/16"
    vpc_region: "eu-west-2"
    vpc_az_1: "eu-west-2a"
    vpc_az_2: "eu-west-2b"
    vpc_az_3: "eu-west-2c"
    vpc_az_1_cidr: "10.0.1.0/28"
    vpc_az_2_cidr: "10.0.2.0/28"
    vpc_az_3_cidr: "10.0.3.0/28"
    key: "laptop"
    security_group: "default"
    instance_type: "t2.micro"
    ami: "ami-0e3c9f42c088b4728"
  tasks:
    - name: create vpc "{{ vpc_name }}"
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ vpc_region }}"
      register: vpc

    - name: create subnet for first az
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        state: present
        az: "{{ vpc_az_1 }}"
        cidr: "{{ vpc_az_1_cidr }}"
        region: "{{ vpc_region }}"
      register: az1_subnet

    # - name: create subnet for second az
    #   amazon.aws.ec2_vpc_subnet:
    #     vpc_id: "{{ vpc.vpc.id }}"
    #     state: present
    #     az: "{{ vpc_az_2 }}"
    #     cidr: "{{ vpc_az_2_cidr }}"
    #     region: "{{ vpc_region }}"
    #   register: az2_subnet

    # - name: create subnet for third az
    #   amazon.aws.ec2_vpc_subnet:
    #     vpc_id: "{{ vpc.vpc.id }}"
    #     state: present
    #     az: "{{ vpc_az_3 }}"
    #     cidr: "{{ vpc_az_3_cidr }}"
    #     region: "{{ vpc_region }}"
    #   register: az3_subnet

    - name: create internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ vpc_region }}"
        state: present
      register: igw

    # Basic creation example:
    - name: Set up public subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ vpc_region }}"
        tags:
          Name: Public
        subnets:
          - "{{ az1_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
          - dest: ::/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_route_table

    - name: create custom amazon.aws.ec2_instance
      amazon.aws.ec2_instance:
        key_name: "{{ key }}"
        security_group: "{{ security_group }}"
        state: present
        wait: yes
        wait_timeout: 300
        region: "{{ vpc_region }}"
        tags:
          Name: "{{ vpc_name }}_vm"
        detailed_monitoring: no
        image_id: "{{ ami }}"
        vpc_subnet_id: "{{ az1_subnet.subnet.id }}"
        network:
          assign_public_ip: yes
